{"version":3,"sources":["app.js","services.js","controllers.js","directives.js"],"names":["kosmosmusic","angular","module","config","$routeProvider","$locationProvider","$mdThemingProvider","when","templateUrl","controller","otherwise","redirectTo","html5Mode","enabled","requireBase","theme","primaryPalette","accentPalette","warnPalette","dark","run","$rootScope","$location","firebaseService","soundcloudService","googleService","initFirebase","init","$on","event","next","current","console","log","kosmosmusicControllers","kosmosmusicServices","kosmosmusicDirectives","setBaseUrl","absUrl","match","RegExp","$scope","$document","$element","$route","$mdComponentRegistry","$mdSidenav","$mdDialog","title","button","index","name","icon","href","releases","mastering","mixes","videos","about","Date","getFullYear","selectButton","path","slice","firebase","disableToggler","get","toggleSidenav","toggle","isSidenavOpen","isOpen","tracks","getTracks","callback","SC","then","$digest","$sce","$window","gData","channelData","undefined","uploads","playlistSrc","channel","items","contentDetails","relatedPlaylists","trustAsResourceUrl","location","origin","channelError","$anchorScroll","$timeout","regXpatternsService","sendEmailService","email","header","message","domain","$$host","buttonText","reset","submit","cancel","params","patterns","sendMailResponse","error","success","hideInstructions","switchInstructionsVisibility","instructions","intro","list","resetForm","loading","submitForm","save","$promise","response","scrollToSubmissionResult","hash","hide","status","statusText","details","updateDetails","getDB","snapshot","val","Object","keys","forEach","key","$apply","catch","showContactDialog","show","parent","element","document","body","targetEvent","clickOutsideToClose","fullscreen","result","rejected","off","directive","restrict","link","scope","on","iFrameHeight","innerHeight","css","iFrameWidth","spotlight","offsetParent","spotlightWidth","clientWidth","elementMargin","marginLeft","marginRight","replace","selectedTrack","sc","selectTrack","$watch","childNodes","length","newVal","oldVal","$watchCollection","factory","soundcloudPlaylistLink","links","bandcamp","facebook","instagram","soundcloud","twitter","website","youtube","text","password","$resource","$$absUrl","method","headers","Content-type","isArray","interceptor","resource","$httpHeaders","service","scid","options","client_id","redirect_uri","initialize","getLinkWithId","GApi","GAuth","GData","load","api","version","setClient","setScope","execute","part","id","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","collection","refOnly","test","ref","once","TypeError"],"mappings":"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","file":"packed-app.min.js","sourcesContent":["/* App Module */\n\nvar kosmosmusic = angular.module('kosmosmusic', [\n\t'ngAnimate',\n\t'ngResource',\n\t'ngSanitize',\n\t'ngRoute',\n\t'ngAria',\n\t'ngMessages',\n\t'ngMaterial',\n\t'angular-google-gapi',\n\t'kosmosmusicControllers',\n\t'kosmosmusicDirectives',\n\t'kosmosmusicServices'\n]);\n\nkosmosmusic\n\t.config(['$routeProvider', '$locationProvider', '$mdThemingProvider',\n\t\t($routeProvider, $locationProvider, $mdThemingProvider) => {\n\t\t\t$routeProvider\n\t\t\t\t.when('/index', {\n\t\t\t\t\ttemplateUrl: 'app/views/index.html',\n\t\t\t\t\tcontroller: 'indexController'\n\t\t\t\t})\n\t\t\t\t.when('/releases', {\n\t\t\t\t\ttemplateUrl: 'app/views/releases.html',\n\t\t\t\t\tcontroller: 'releasesController'\n\t\t\t\t})\n\t\t\t\t.when('/mastering', {\n\t\t\t\t\ttemplateUrl: 'app/views/mastering.html',\n\t\t\t\t\tcontroller: 'masteringController'\n\t\t\t\t})\n\t\t\t\t.when('/mixes', {\n\t\t\t\t\ttemplateUrl: 'app/views/mixes.html',\n\t\t\t\t\tcontroller: 'mixesController'\n\t\t\t\t})\n\t\t\t\t.when('/videos', {\n\t\t\t\t\ttemplateUrl: 'app/views/videos.html',\n\t\t\t\t\tcontroller: 'videosController'\n\t\t\t\t})\n\t\t\t\t.when('/about', {\n\t\t\t\t\ttemplateUrl: 'app/views/about.html',\n\t\t\t\t\tcontroller: 'aboutController'\n\t\t\t\t})\n\t\t\t\t.otherwise({\n\t\t\t\t\tredirectTo: '/index'\n\t\t\t\t});\n\n\t\t\t$locationProvider.html5Mode({enabled: true, requireBase: false});\n\n\t\t\t$mdThemingProvider.theme('default')\n\t\t\t\t.primaryPalette('blue-grey')\n\t\t\t\t.accentPalette('amber')\n\t\t\t\t.warnPalette('red')\n\t\t\t\t//.backgroundPalette('blue-grey')\n\t\t\t\t.dark();\n\t\t}\n\t])\n\t.run(['$rootScope', '$location', 'firebaseService', 'soundcloudService', 'googleService',\n\t\t($rootScope, $location, firebaseService, soundcloudService, googleService) => {\n\t\t\t/*\n\t\t\t*\tinitialize firebase\n\t\t\t*/\n\t\t\tfirebaseService.initFirebase();\n\n\t\t\t/*\n\t\t\t*\tinitialize soundcloud\n\t\t\t*/\n\t\t\tsoundcloudService.init();\n\n\t\t\t/*\n\t\t\t*\tinitialize google\n\t\t\t*/\n\t\t\tgoogleService.init();\n\n\t\t\t$rootScope.$on('$locationChangeSuccess', (event, next, current) => {\n\t\t\t\tconsole.log('event', event);\n\t\t\t\tconsole.log('current', current);\n\t\t\t\tconsole.log('next', next);\n\t\t\t});\n\t\t}\n\t]);\n\nvar kosmosmusicControllers = angular.module('kosmosmusicControllers', []); // eslint-disable-line no-unused-vars\nvar kosmosmusicServices = angular.module('kosmosmusicServices', []); // eslint-disable-line no-unused-vars\nvar kosmosmusicDirectives = angular.module('kosmosmusicDirectives', []); // eslint-disable-line no-unused-vars\n","'use strict';\n/* global kosmosmusicServices */\n\nkosmosmusicServices.factory('regXpatternsService', [ function() {\n\t/*\n\t*\tregular expression patterns shared service\n\t*/\n\treturn {\n\t\temail: /\\w{2}@\\w{2,}(\\.)?\\w{2,}/,\n\t\tsoundcloudPlaylistLink: /^https:\\/\\/soundcloud\\.com\\/\\w+[^/]*\\/sets\\/\\w+[^/]*$/,\n\t\tlinks: {\n\t\t\tbandcamp: /^https:\\/\\/\\w+\\.bandcamp\\.com(\\/)?$/,\n\t\t\tfacebook: /^https:\\/\\/www\\.facebook\\.com\\/[^/\\s]+(\\/)?$/,\n\t\t\tinstagram: /^https:\\/\\/www\\.instagram\\.com\\/[^/\\s]+(\\/)?$/,\n\t\t\tsoundcloud: /^https:\\/\\/www\\.soundcloud\\.com\\/[^/\\s]+(\\/)?$/,\n\t\t\ttwitter: /^https:\\/\\/twitter\\.com\\/[^/\\s]+(\\/)?$/,\n\t\t\twebsite: /^http(s)?:\\/\\/(www\\.)?[^/\\s]+\\.[a-z]{2,}(\\/)?$/,\n\t\t\tyoutube: /^https:\\/\\/www\\.youtube\\.com\\/(c|user)\\/[^/\\s]+(\\/)?$/\n\t\t},\n\t\ttext: /\\w{3,}/,\n\t\tname: /\\w{2,}/,\n\t\theader: /\\w{5,}/,\n\t\tmessage: /[\\w\\s_-]{75,}/,\n\t\tpassword: /\\w{8,}/\n\t};\n}]);\n\n/*\n*\tdynamically set backend base url to be able to deploy on any domain\n*/\nfunction setBaseUrl(absUrl) {\n\treturn absUrl.match(new RegExp('http(s)?://[^/]+'))[0];\n}\n\nkosmosmusicServices.factory('sendEmailService', ['$resource', '$location', function($resource, $location) {\n\tconst baseUrl = setBaseUrl($location.$$absUrl);\n\treturn $resource( baseUrl + '/sendEmail', {}, {\n\t\tsave: {method: 'POST', params: {}, headers: {'Content-type': 'application/x-www-form-urlencoded'}, isArray: false,\n\t\t\tinterceptor: {\n\t\t\t\tresponse: (response) => {\n\t\t\t\t\tresponse.resource.$httpHeaders = response.headers;\n\t\t\t\t\treturn response.resource;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}]);\n\n/*\n*\tTODO: sendDemoOverEmailService factory\n*/\n\nkosmosmusicServices.service('soundcloudService', [function() {\n\tconst scid = 'soundcloud_client_id';\n\tconst options = {\n\t\tclient_id: scid,\n\t\tredirect_uri: 'http://dnbhub.com/callback.html' // TODO: replace callback url after API key issue\n\t};\n\tconst service = {\n\t\t/* global SC */\n\t\tinit: () => {\n\t\t\treturn SC.initialize(options);\n\t\t},\n\t\tgetLinkWithId: (href) => href + '?client_id=' + scid\n\t};\n\treturn service;\n}]);\n\nkosmosmusicServices.service('googleService', ['GApi', 'GAuth', 'GData', function(GApi, GAuth, GData) {\n\t/*\n\t*\tlibrary description reference https://github.com/maximepvrt/angular-google-gapi/\n\t*/\n\tconst part = 'snippet,contentDetails,statistics,topicDetails,status,brandingSettings,invideoPromotion,contentOwnerDetails';\n\tconst channelId = 'UC2HOUBVyZw9mPM3joMShYKQ';\n\tconst gcbk = 'google_apis_browser_key';\n\tconst gcid = 'google_apis_client_id';\n\tconst gScope = 'https://www.googleapis.com/auth/youtube.readonly';\n\tconst service = {\n\t\tinit: () => {\n\t\t\tGApi.load('youtube', 'v3').catch((api, version) => console.log('GApi init error:', api, 'version', version));\n\t\t\tGAuth.setClient(gcid);\n\t\t\tGAuth.setScope(gScope);\n\t\t\tGAuth.load();\n\t\t},\n\t\tgData: () => GData,\n\t\tchannel: () => GApi.execute('youtube', 'channels.list', {\n\t\t\tpart: part,\n\t\t\tid: channelId,\n\t\t\tkey: gcbk\n\t\t})\n\t};\n\treturn service;\n}]);\n\nkosmosmusicServices.service('firebaseService', [function() {\n\tconst service = {\n\t\t/* global firebase */\n\t\tinitFirebase: () => {\n\t\t\tconst config = {\n\t\t\t\tapiKey: 'firebase_api_key',\n\t\t\t\tauthDomain: 'firebase_auth_domain',\n\t\t\t\tdatabaseURL: 'firebase_database_url',\n\t\t\t\tprojectId: 'firebase_project_id',\n\t\t\t\tstorageBucket: 'firebase_storage_bucket',\n\t\t\t\tmessagingSenderId: 'firebase_messaging_sender_id'\n\t\t\t};\n\t\t\tfirebase.initializeApp(config);\n\t\t\tservice.db = firebase.database();\n\t\t},\n\n\t\tdb: undefined,\n\n\t\tgetDB: (collection, refOnly) => {\n\t\t\tif (collection && (/(about|contacts)/.test(collection))) {\n\t\t\t\treturn (!refOnly) ? service.db.ref('/' + collection).once('value') : service.db.ref('/' + collection);\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('firebaseService, getDB(collection): missing collection identifier, which can have values: about, freedownloads, blog, blogEntriesIDs, brands, users, emails');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn service;\n\n}]);\n","'use strict';\n/* global kosmosmusicControllers */\n\nkosmosmusicControllers.controller('navController', ['$rootScope', '$scope', '$document', '$element', '$location', '$route', '$mdComponentRegistry', '$mdSidenav', '$mdDialog', 'firebaseService',\n\tfunction($rootScope, $scope, $document, $element, $location, $route, $mdComponentRegistry, $mdSidenav, $mdDialog, firebaseService) {\n\t\t$scope.title = 'KOS.MOS.MUSIC';\n\t\t$scope.button = {\n\t\t\tindex: {\n\t\t\t\tname: 'KOS.MOS.MUSIC',\n\t\t\t\ttitle: 'KOS.MOS.MUSIC index',\n\t\t\t\ticon: 'fa fa-home',\n\t\t\t\thref: 'index'\n\t\t\t},\n\t\t\treleases: {\n\t\t\t\tname: 'Releases',\n\t\t\t\ttitle: 'Soundcloud powered production showcase',\n\t\t\t\ticon: 'fa fa-music',\n\t\t\t\thref: 'releases'\n\t\t\t},\n\t\t\tmastering: {\n\t\t\t\tname: 'Mastering',\n\t\t\t\ttitle: 'Soundcloud powered mastering showcase',\n\t\t\t\ticon: 'fa fa-file-audio-o',\n\t\t\t\thref: 'mastering'\n\t\t\t},\n\t\t\tmixes: {\n\t\t\t\tname: 'Mixes',\n\t\t\t\ttitle: 'Mixcloud powered mixes showcase',\n\t\t\t\ticon: 'fa fa-mixcloud',\n\t\t\t\thref: 'mixes'\n\t\t\t},\n\t\t\tvideos: {\n\t\t\t\tname: 'Videos',\n\t\t\t\ttitle: 'Youtube powered videos showcase',\n\t\t\t\ticon: 'fa fa-youtube',\n\t\t\t\thref: 'videos'\n\t\t\t},\n\t\t\tabout: {\n\t\t\t\tname: 'About',\n\t\t\t\ttitle: '2018-' + new Date().getFullYear() + '&copy;' + 'All trademarks and copyrights are property of their respective owners',\n\t\t\t\ticon: 'fa fa-info',\n\t\t\t\thref: 'about'\n\t\t\t}\n\t\t};\n\t\t$scope.selectButton = (href) => {\n\t\t\t// console.log('selectButton, href:', href);\n\t\t\tif ($location.path().slice(1) === href) {\n\t\t\t\t// console.log('selectButton, path:', $location.path());\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\t$scope.firebase = firebaseService;\n\t\t$scope.disableToggler = () => {\n\t\t\treturn !$mdComponentRegistry.get('left');\n\t\t};\n\t\t$scope.toggleSidenav = () => {\n\t\t\tif ($mdComponentRegistry.get('left')) {\n\t\t\t\t$mdSidenav('left').toggle();\n\t\t\t}\n\t\t};\n\t\t$scope.isSidenavOpen = () => {\n\t\t\t/*\n\t\t\t*\tactual function logic must be set after focument is ready\n\t\t\t*\tor it will generate errors, because sidenav DOM object loads after the main navbar\n\t\t\t*/\n\t\t\tif ($mdComponentRegistry.get('left')) {\n\t\t\t\t// console.log('is sidenav open', $mdSidenav('left').isOpen());\n\t\t\t\treturn $mdSidenav('left').isOpen();\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n]);\n\nkosmosmusicControllers.controller('indexController', ['$scope',\n\tfunction($scope) {\n\t\t$scope.tracks = [];\n\t\t$scope.getTracks = (callback) => {\n\t\t\tSC.get('/users/403059/tracks').then((tracks) => {\n\t\t\t\t$scope.tracks = tracks;\n\t\t\t\t$scope.$digest();\n\t\t\t\tcallback();\n\t\t\t});\n\t\t};\n\t\t/*\n\t\t*\tlifecycle\n\t\t*/\n\t\t$scope.$on('$viewContentLoaded', () => {\n\t\t\tconsole.log('index view controller loaded');\n\t\t\t$scope.getTracks(() => {\n\t\t\t\tconsole.log('got tracks');\n\t\t\t});\n\t\t});\n\t\t$scope.$on('$destroy', () => {\n\t\t\tconsole.log('index view controller destroyed');\n\t\t});\n\t}\n]);\n\nkosmosmusicControllers.controller('releasesController', ['$scope',\n\tfunction($scope) {\n\t\t/*\n\t\t*\tlifecycle\n\t\t*/\n\t\t$scope.$on('$viewContentLoaded', () => {\n\t\t\tconsole.log('releases view controller loaded');\n\t\t});\n\t\t$scope.$on('$destroy', () => {\n\t\t\tconsole.log('releases view controller destroyed');\n\t\t});\n\t}\n]);\n\nkosmosmusicControllers.controller('masteringController', ['$scope',\n\tfunction($scope) {\n\t\t/*\n\t\t*\tlifecycle\n\t\t*/\n\t\t$scope.$on('$viewContentLoaded', () => {\n\t\t\tconsole.log('mastering view controller loaded');\n\t\t});\n\t\t$scope.$on('$destroy', () => {\n\t\t\tconsole.log('mastering view controller destroyed');\n\t\t});\n\t}\n]);\n\nkosmosmusicControllers.controller('mixesController', ['$scope',\n\tfunction($scope) {\n\t\t/*\n\t\t*\tlifecycle\n\t\t*/\n\t\t$scope.$on('$viewContentLoaded', () => {\n\t\t\tconsole.log('mixes view controller loaded');\n\t\t});\n\t\t$scope.$on('$destroy', () => {\n\t\t\tconsole.log('mixes view controller destroyed');\n\t\t});\n\t}\n]);\n\nkosmosmusicControllers.controller('videosController', ['$scope', '$sce', '$window', 'googleService',\n\tfunction($scope, $sce, $window, googleService) {\n\t\t$scope.gData = googleService.gData(); // get/set authed user data\n\t\t$scope.channelData = undefined;\n\t\t$scope.uploads = undefined;\n\t\t$scope.playlistSrc = undefined;\n\t\t/*\n\t\t*\tlifecycle\n\t\t*/\n\t\t$scope.$on('$viewContentLoaded', () => {\n\t\t\tconsole.log('videos view controller loaded');\n\t\t\tgoogleService.channel().then(\n\t\t\t\t(channelData) => {\n\t\t\t\t\t$scope.channelData = channelData;\n\t\t\t\t\t// console.log('$scope.channelData', $scope.channelData);\n\t\t\t\t\t$scope.uploads = channelData.items[0].contentDetails.relatedPlaylists.uploads;\n\t\t\t\t\t// console.log('$scope.uploads', $scope.uploads);\n\t\t\t\t\t$scope.playlistSrc = $sce.trustAsResourceUrl('https://www.youtube.com/embed/?listType=playlist&list=' + $scope.uploads + '&enablejsapi=1&origin=' + $window.location.origin);\n\t\t\t\t\t// console.log('$scope.playlistSrc', $scope.playlistSrc);\n\t\t\t\t},\n\t\t\t\t(channelError) => console.log('channel error:', channelError)\n\t\t\t);\n\t\t});\n\t\t$scope.$on('$destroy', () => {\n\t\t\tconsole.log('videos view controller destroyed');\n\t\t});\n\t}\n]);\n\nkosmosmusicControllers.controller('contactController', ['$scope', '$mdDialog', '$location', '$anchorScroll', '$timeout', 'regXpatternsService', 'sendEmailService',\n\tfunction($scope, $mdDialog, $location, $anchorScroll, $timeout, regXpatternsService, sendEmailService) {\n\t\t$scope.email = '';\n\t\t$scope.name = '';\n\t\t$scope.header = '';\n\t\t$scope.message = '';\n\t\t$scope.domain = $location.$$host;\n\t\t$scope.buttonText = {reset: 'Reset all fields', submit: 'Send message', cancel: 'Cancel'};\n\t\t$scope.params = '';\n\t\t$scope.patterns = regXpatternsService;\n\t\t$scope.sendMailResponse = {error: '', success: ''};\n\t\t$scope.hideInstructions = false;\n\t\t$scope.switchInstructionsVisibility = () => {\n\t\t\t$scope.hideInstructions = true;\n\t\t};\n\t\t$scope.instructions = {\n\t\t\tintro: 'Use this contact form for any enquiries correlating with KOS.MOS.MUSIC activities, e.g.:',\n\t\t\tlist: [\n\t\t\t\t'make a booking request - book artists representing KOS.MOS.MUSIC for your event;',\n\t\t\t\t'make a collaboration or hire request - work with us in the context of audio production from scratch, remixing, or mastering;',\n\t\t\t\t'make a licencing request - use music produced by KOS.MOS.MUSIC for your project needs;',\n\t\t\t\t'make an arbitrary request - did we miss something?'\n\t\t\t]\n\t\t};\n\t\t$scope.resetForm = () => {\n\t\t\t$scope.email = '';\n\t\t\t$scope.name = '';\n\t\t\t$scope.header = '';\n\t\t\t$scope.message = '';\n\t\t};\n\t\t$scope.loading = false;\n\t\t$scope.submitForm = () => {\n\t\t\t$scope.loading = true;\n\t\t\t$scope.params = 'name=' + $scope.name + '&email=' + $scope.email + '&header=' + $scope.header + '&message=' + $scope.message + '&domain=' + $scope.domain;\n\t\t\tsendEmailService.save({}, $scope.params).$promise.then(\n\t\t\t\t(response) => {\n\t\t\t\t\t// console.log(response);\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\t$scope.sendMailResponse.error = '';\n\t\t\t\t\t\t$scope.sendMailResponse.success = response.success || 'Message was successfully sent';\n\t\t\t\t\t\t$scope.resetForm();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$scope.sendMailResponse.error = response.error || 'Unknown error';\n\t\t\t\t\t\t$scope.sendMailResponse.success = '';\n\t\t\t\t\t}\n\t\t\t\t\t$scope.scrollToSubmissionResult();\n\t\t\t\t\t$timeout(() => {\n\t\t\t\t\t\t$location.hash('');\n\t\t\t\t\t\t$scope.sendMailResponse.success = '';\n\t\t\t\t\t\t$scope.sendMailResponse.error = '';\n\t\t\t\t\t\t$scope.loading = false;\n\t\t\t\t\t\t$scope.hide();\n\t\t\t\t\t},5000);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\t// console.log('sendMessage error: ', error);\n\t\t\t\t\t$scope.sendMailResponse.success = '';\n\t\t\t\t\t$scope.sendMailResponse.error = error.status + ' : ' + error.statusText;\n\t\t\t\t\t$scope.scrollToSubmissionResult();\n\t\t\t\t\t$timeout(() => {\n\t\t\t\t\t\t$location.hash('');\n\t\t\t\t\t\t$scope.sendMailResponse.error = '';\n\t\t\t\t\t\t$scope.loading = false;\n\t\t\t\t\t},5000);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\t$scope.scrollToSubmissionResult = () => {\n\t\t\t$location.hash('submission-result');\n\t\t\t$anchorScroll();\n\t\t};\n\t\t/*\n\t\t*\tdialog controls\n\t\t*/\n\t\t$scope.hide = () => {\n\t\t\t$location.hash('');\n\t\t\t$mdDialog.hide();\n\t\t};\n\t\t$scope.cancel = () => {\n\t\t\t$location.hash('');\n\t\t\t$mdDialog.cancel();\n\t\t};\n\t\t/*\n\t\t*\tlifecycle\n\t\t*/\n\t\t$scope.$on('$viewContentLoaded', () => {\n\t\t\tconsole.log('contact view controller loaded');\n\t\t});\n\t\t$scope.$on('$destroy', () => {\n\t\t\tconsole.log('contact view controller destroyed');\n\t\t});\n\t}\n]);\n\nkosmosmusicControllers.controller('aboutController', ['$scope', '$route', '$mdDialog', 'firebaseService',\n\tfunction($scope, $route, $mdDialog, firebaseService) {\n\t\t$scope.details = {};\n\t\t$scope.firebase = firebaseService;\n\t\t$scope.updateDetails = () => {\n\t\t\t$scope.firebase.getDB('about')\n\t\t\t\t.then((snapshot) => {\n\t\t\t\t\tconsole.log('about', snapshot.val());\n\t\t\t\t\tconst response = snapshot.val();\n\t\t\t\t\t$scope.details = {};\n\t\t\t\t\tconst keys = Object.keys(response);\n\t\t\t\t\t// console.log('keys, response:', keys, ',', response);\n\t\t\t\t\tkeys.forEach((key) => {\n\t\t\t\t\t\t$scope.details[key] = response[key];\n\t\t\t\t\t});\n\t\t\t\t\t// console.log('$scope.details:', $scope.details);\n\t\t\t\t\t$scope.$apply();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log('error', error);\n\t\t\t\t});\n\t\t};\n\t\t$scope.showContactDialog = (event) => {\n\t\t\t$mdDialog.show({\n\t\t\t\tcontroller: 'contactController',\n\t\t\t\ttemplateUrl: './app/views/contact.html',\n\t\t\t\tparent: angular.element(document.body),\n\t\t\t\ttargetEvent: event,\n\t\t\t\tclickOutsideToClose: false,\n\t\t\t\tfullscreen: true\n\t\t\t}).then(\n\t\t\t\t(result) => console.log('submitted', result),\n\t\t\t\t(rejected) => console.log('closed', rejected)\n\t\t\t);\n\t\t};\n\t\t/*\n\t\t*\tlifecycle\n\t\t*/\n\t\t$scope.$on('$viewContentLoaded', () => {\n\t\t\tconsole.log('about view controller loaded');\n\t\t\t$scope.updateDetails();\n\t\t});\n\t\t$scope.$on('$destroy', () => {\n\t\t\tconsole.log('about view controller destroyed');\n\t\t\t$scope.firebase.getDB('about', true).off();\n\t\t});\n\t}\n]);\n","'use strict';\n/* global kosmosmusicDirectives */\n\nkosmosmusicDirectives.directive('setElementDimensionsOnload', ['$window',\n\tfunction($window){\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: (scope, element) => {\n\t\t\t\telement.on('load', () => {\n\t\t\t\t\tconst iFrameHeight = $window.innerHeight - 75;\n\t\t\t\t\tconst iFrameWidth = 400;\n\t\t\t\t\telement.css('width', iFrameWidth + 'px');\n\t\t\t\t\telement.css('height', iFrameHeight + 'px');\n\t\t\t\t\tconsole.log('element', element);\n\t\t\t\t\tconst spotlight = angular.element(element.offsetParent());\n\t\t\t\t\tconst spotlightWidth = spotlight[0].clientWidth;\n\t\t\t\t\tconst elementMargin = ((spotlightWidth - iFrameWidth) / 2) - 15;\n\t\t\t\t\tconsole.log('resize params', spotlight, spotlightWidth, elementMargin);\n\t\t\t\t\telement.css({marginLeft: elementMargin + 'px', marginRight: elementMargin + 'px'});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);\n\nkosmosmusicDirectives.directive('customSoundcloudPlayer', [ 'soundcloudService',\n\tfunction(soundcloudService) {\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\treplace: true,\n\t\t\ttemplateUrl: 'app/views/custom-soundcloud-player.html',\n\t\t\tlink: (scope, element) => {\n\t\t\t\tscope.selectedTrack;\n\t\t\t\tscope.sc = soundcloudService;\n\t\t\t\tscope.selectTrack = (index) => {\n\t\t\t\t\tscope.selectedTrack = index;\n\t\t\t\t};\n\t\t\t\tscope.$watch(() => { return element[0].childNodes.length; }, (newVal, oldVal) => {\n\t\t\t\t\tif (!newVal && !oldVal) {\n\t\t\t\t\t\tconsole.log('soundcloud player DOM initial change:', newVal, '|', oldVal);\n\t\t\t\t\t} else if (newVal !== oldVal) {\n\t\t\t\t\t\tconsole.log('soundcloud player DOM changed:', newVal, '|', oldVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tscope.$watchCollection('tracks', (newVal) => {\n\t\t\t\t\tconsole.log('sc player, tracks changed', newVal);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}